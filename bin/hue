#!/bin/zsh

# usage: $0 <group> on|off|status <brightness (percent)>"
# to find bridge id and ip, go to: https://www.meethue.com/api/nupnp
# [[{"id":"001788fffe20ce87","internalipaddress":"192.168.1.72"}]]

# print help message if no arguments
if [[ $# < 1 ]]; then
  echo "error: hue requires at least 3 arg, ex: hue <group> on|off|status <brightness (percent)>"
  return 1;
fi

# define connection hash and bridge IP
hash="g687jn8stWJqOnh8B3NVpMdfXoS-FSFN-fTwHfIg"
bridge="192.168.1.72"

# define input order
group=$1
state=$2
bri=$3

# light groups
living="1"
kitchen="2"
office="3"
bedroom="4"
garage="5"
outside="6"
all="1 2 3"


# define lights
if [[ $group = "living" ]]; then
        lights="$living"
elif [[ $group = "kitchen" ]]; then
        lights="$kitchen"
elif [[ $group = "office" ]]; then
        lights="$office"
elif [[ $group = "bedroom" ]]; then
        lights="$bedroom"
elif [[ $group = "garage" ]]; then
        lights="$garage"
elif [[ $group = "outside" ]]; then
        lights="$outside"
elif [[ $group = "all" ]]; then
        lights="$all"
elif [[ $group -eq $group ]]; then
        lights="$group"
else
        lights="$all"
fi


# light on function
light_on () {
  # determine brightness
  if [[ -z $bri ]]; then
          bri=100
  fi
  bright=$(($bri*254/100))

  for light in $lights; do
          ltype=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |sed -e 's/.*\"modelid/modelid/' -e 's/\,.*//' -e 's/type\": \"//' -e 's/\"//'`
          if [[ `echo $ltype |grep -c LWB00[[46]]` = 1 ]]; then
                  type="white"
                  on=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f1 |cut -d\{ -f3 |cut -d: -f2`
                  if [[ $on = "true" ]]; then
                          curl -X PUT -d '{"bri":'$bright'}' http://$bridge/api/$hash/lights/$light/state > /dev/null 2>&1
                  elif [[ $on = "false" ]]; then
                          curl -X PUT -d '{"on":true,"bri":'$bright'}' http://$bridge/api/$hash/lights/$light/state > /dev/null 2>&1
                  fi
          elif [[ `echo $ltype |grep -c LCT00[[12]]` = 1 ]]; then
                  type="hue"
                  on=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f1 |cut -d\{ -f3 |cut -d: -f2`
                  if [[ $on = "true" ]]; then
                          curl -X PUT -d '{"ct":369,"bri":'$bright'}' http://$bridge/api/$hash/lights/$light/state > /dev/null 2>&1
                  elif [[ $on = "false" ]]; then
                          curl -X PUT -d '{"on":true,"ct":369,"bri":'$bright'}' http://$bridge/api/$hash/lights/$light/state > /dev/null 2>&1
                  fi
          elif [[ `echo $ltype |grep -c LST001` = 1 ]]; then
                  type="lightstrip"
                  on=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f1 |cut -d\{ -f3 |cut -d: -f2`
                  if [[ $on = "true" ]]; then
                          curl -X PUT -d '{"ct":369,"bri":'$bright'}' http://$bridge/api/$hash/lights/$light/state > /dev/null 2>&1
                  elif [[ $on = "false" ]]; then
                          curl -X PUT -d '{"on":true,"ct":369,"bri":'$bright'}' http://$bridge/api/$hash/lights/$light/state > /dev/null 2>&1
                  fi
          fi
  done
}


# light off function
light_off () {
  for light in $lights; do
          on=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f1 |cut -d\{ -f3 |cut -d: -f2`
          while [[ $on = "true" ]]; do
                  curl -X PUT -d '{"on":false}' http://$bridge/api/$hash/lights/$light/state > /dev/null 2>&1
                  on=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f1 |cut -d\{ -f3 |cut -d: -f2`
          done
  done
}


# light status function
light_status () {

if [[ -t 1 ]]; then
        clear
fi

        printf "%-3s %-18s %-14s %-10s %-10s %-10s %-10s\n" "#" "name" "type" "state" "reachable" "bri" "hue"
        echo "------------------------------------------------------------------------------"

        for light in $lights; do
                unset state reach chue on bri type reachable name type
                ltype=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |sed -e 's/.*\"modelid/modelid/' -e 's/\,.*//' -e 's/type\": \"//' -e 's/\"//'`
                if [[ `echo $ltype |grep -c LWB00[[46]]` = 1 ]]; then
                        type="white"
                        on=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f1 |cut -d\{ -f3 |cut -d: -f2`
                        reachable=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f4 |cut -d: -f2 |sed 's/}//'`
                        name=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f6 |cut -d: -f2 |sed -e 's/}//' -e 's/"//' -e 's/\"//'`
                        if [[ $on = "true" ]]; then
                                bri=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f2 |cut -d: -f2`
                        fi
                elif [[ `echo $ltype |grep -c LCT00[[12]]` = 1 ]]; then
                        type="hue"
                        on=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f1 |cut -d\{ -f3 |cut -d: -f2`
                        reachable=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f11 |cut -d: -f2 |sed 's/}//'`
                        name=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f13 |cut -d: -f2 |sed -e 's/}//' -e 's/"//' -e 's/\"//'`
                        if [[ $on = "true" ]]; then
                                hue=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f3 |cut -d: -f2 |sed 's/}//'`
                                bri=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f2 |cut -d: -f2`
                        fi
                elif [[ `echo $ltype |grep -c LST001` = 1 ]]; then
                        type="lightstrip"
                        on=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f1 |cut -d\{ -f3 |cut -d: -f2`
                        reachable=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f10 |cut -d: -f2 |sed 's/}//'`
                        name=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f12 |cut -d: -f2 |sed -e 's/}//' -e 's/"//' -e 's/\"//'`
                        if [[ $on = "true" ]]; then
                                hue=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f3 |cut -d: -f2 |sed 's/}//'`
                                bri=`curl -X GET -s "http://$bridge/api/$hash/lights/$light" |cut -d, -f2 |cut -d: -f2`
                        fi
                fi

                if [[ $reachable = "true" ]]; then
                        reach="YES"
                else
                        reach="NO"
                fi

                if [[ $on = "true" ]]; then
                        state="ON"
                else
                        state="OFF"
                fi

                if [[ "$state" = "ON" ]]; then
                        if [[ "$type" = "hue" ]]; then
                                printf "%-3s %-18s %-14s %-10s %-10s %-10s %-10s\n" "$light" "$name" "$type" "$state" "$reach" "$bri" "$hue"
                        fi
                        if [[ "$type" = "lightstrip" ]]; then
                                printf "%-3s %-18s %-14s %-10s %-10s %-10s %-10s\n" "$light" "$name" "$type" "$state" "$reach" "$bri" "$hue"
                        fi
                        if [[ "$type" = "white" ]]; then
                                printf "%-3s %-18s %-14s %-10s %-10s %-10s\n" "$light" "$name" "$type" "$state" "$reach" "$bri"
                        fi
                fi
                if [[ "$state" = "OFF" ]]; then
                        printf "%-3s %-18s %-14s %-10s %-10s\n"  "$light" "$name" "$type" "$state" "$reach"
                fi

        done
        echo ""
}



# perform action
if [[ $2 = "on" ]]; then
        light_on
elif [[ $2 = "off" ]]; then
        light_off
elif [[ $2 = "status" ]]; then
        light_status
fi

# TODO: integrate this function into this script
# Set PhilipsHue light theme using cURL to send HTTP Put
# args: $1 - theme name
setPhilipsHueTheme() {
	if [[ $# < 1 ]] then
		echo "error: setPhilipsHueTheme requires at least 1 arg"
		return 1;
	fi

 	# WARN: IP/User could change frequently
    hue_ip='http://192.168.1.72';
    hue_user='g687jn8stWJqOnh8B3NVpMdfXoS-FSFN-fTwHfIg';

    # available lights
	hue_url_light1="$hue_ip/api/$hue_user/lights/1/state";
	hue_url_light2="$hue_ip/api/$hue_user/lights/2/state";
	hue_url_light3="$hue_ip/api/$hue_user/lights/3/state";

	if [[ $1 == "off" ]] then
		hue_body_light1='{"on": false,"bri": 254, "hue": 15125, "sat": 133}';
		hue_body_light2='{"on": false,"bri": 163, "hue": 22632, "sat": 254}';
		hue_body_light3='{"on": false,"bri": 163, "hue": 26632, "sat": 254}';
	elif [[ $1 == "home" ]] then
        if [[ $2 == "low" ]] then
            hue_body_light1='{"on": true,"bri": 3, "hue": 15125, "sat": 133}';
		        hue_body_light2='{"on": true,"bri": 2, "hue": 26632, "sat": 254}';
		        hue_body_light3='{"on": true,"bri": 2, "hue": 26632, "sat": 254}';
        else
		    hue_body_light1='{"on": true,"bri": 254, "hue": 15125, "sat": 133}';
		    hue_body_light2='{"on": true,"bri": 163, "hue": 26632, "sat": 254}';
		    hue_body_light3='{"on": true,"bri": 163, "hue": 26632, "sat": 254}';
        fi
	elif [[ $1 == "relax" ]] then
		hue_body_light1='{"on": true,"bri": 144, "hue": 13088, "sat": 213}';
		hue_body_light2='{"on": true,"bri": 144, "hue": 13088, "sat": 213}';
		hue_body_light3='{"on": true,"bri": 144, "hue": 13088, "sat": 213}';
	elif [[ $1 == "sexy" ]] then
		hue_body_light1='{"on": true,"bri": 225, "hue": 45706, "sat": 252}';
		hue_body_light2='{"on": true,"bri": 183, "hue": 704, "sat": 250}';
		hue_body_light3='{"on": true,"bri": 183, "hue": 704, "sat": 250}';
	elif [[ $1 == "study" ]] then
		hue_body_light1='{"on": true,"bri": 219, "hue": 33848, "sat": 44}';
		hue_body_light2='{"on": true,"bri": 219, "hue": 33848, "sat": 44}';
		hue_body_light3='{"on": true,"bri": 219, "hue": 33848, "sat": 44}';
	elif [[ $1 == "candy" ]] then
		hue_body_light1='{"on": true,"bri": 254, "hue": 16198, "sat": 59}';
		hue_body_light2='{"on": true,"bri": 238, "hue": 25653, "sat": 254}';
		hue_body_light3='{"on": true,"bri": 254, "hue": 14738, "sat": 153}';
	else
		echo "error: setPhilipsHueTheme did not recognize theme: $1"
		return 1;
	fi

	curl -H "Content-Type: application/json" -X PUT -d $hue_body_light1 $hue_url_light1;
	curl -H "Content-Type: application/json" -X PUT -d $hue_body_light2 $hue_url_light2;
	curl -H "Content-Type: application/json" -X PUT -d $hue_body_light3 $hue_url_light3;
}

